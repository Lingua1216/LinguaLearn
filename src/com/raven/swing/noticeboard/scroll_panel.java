/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.raven.swing.noticeboard;

import com.raven.swing.scrollbar.ScrollBarCustom;
import java.awt.Color;
import javax.swing.JTextPane;
import java.awt.Font;
import javax.swing.SwingUtilities;
import net.miginfocom.swing.MigLayout;
import java.awt.*;
import java.awt.event.*;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;


/**
 *
 * @author intsi
 */
public class scroll_panel extends javax.swing.JPanel {

    /**
     * Creates new form scroll_panel
     */
    public scroll_panel() {
        initComponents();
        setOpaque(false);
        jScrollPane2.getViewport().setOpaque(false);
        jScrollPane2.setViewportBorder(null);
        jScrollPane2.setVerticalScrollBar(new ScrollBarCustom());
        panel.setLayout(new MigLayout("nogrid, fillx"));
      
    }
    //ll horizontally
        
public void addscroll_panel(String data) {
    JTextPane txt = new JTextPane();
    txt.setBackground(new Color(0, 0, 0, 0)); // Transparent background
    txt.setForeground(new Color(102, 102, 102)); // Gray text color
    txt.setSelectionColor(new Color(150, 150, 150));
    txt.setBorder(null);
    txt.setOpaque(false);
    txt.setEditable(false);
    
   Font font = new Font("Serif", Font.PLAIN, 20); // Change "Arial" and 16 to your desired font and size
    txt.setFont(font); // Set the font for the JTextPane
    txt.setText(data); // Set the text to be displayed
    // Add MouseListener to change text color on click
        txt.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                // Change text color on press
                StyledDocument doc = txt.getStyledDocument();
                SimpleAttributeSet attrs = new SimpleAttributeSet();
                StyleConstants.setForeground(attrs, Color.BLUE); // Change to desired color
                doc.setCharacterAttributes(0, doc.getLength(), attrs, false);
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                // Revert text color on release
                StyledDocument doc = txt.getStyledDocument();
                SimpleAttributeSet attrs = new SimpleAttributeSet();
                StyleConstants.setForeground(attrs, new Color(102, 102, 102)); // Original color
                doc.setCharacterAttributes(0, doc.getLength(), attrs, false);
            }
        });

    panel.add(txt, "w 100::90%, wrap"); // Add the JTextPane to the panel
    
    panel.revalidate(); // Refresh the panel layout
    panel.repaint(); // Repaint the panel to show the new content
}

    public void scrollToTop() {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jScrollPane2.getVerticalScrollBar().setValue(0);
            }
        }); 
}
        

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        panel = new javax.swing.JPanel();

        jScrollPane2.setHorizontalScrollBar(null);

        panel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 458, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 446, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(panel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
    }// </editor-fold>//GEN-END:initComponents

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables


    
   
}
